---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: portal
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgresdb
  POSTGRES_USER: postgresadmin
  POSTGRES_PASSWORD: admin123
  PGDATA: /var/lib/postgresql/data/pgdata
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: portal
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
--- 
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: portal
  name: postgres-init
data:
  docker_postgres_init.sql: |
    CREATE USER pki WITH PASSWORD 'pki' CREATEDB;
    CREATE DATABASE domain
      WITH 
      OWNER = pki
      ENCODING = 'UTF8'
      LC_COLLATE = 'en_US.utf8'
      LC_CTYPE = 'en_US.utf8'
      TABLESPACE = pg_default
      CONNECTION LIMIT = -1;
    CREATE DATABASE certificates
      WITH 
      OWNER = pki
      ENCODING = 'UTF8'
      LC_COLLATE = 'en_US.utf8'
      LC_CTYPE = 'en_US.utf8'
      TABLESPACE = pg_default
      CONNECTION LIMIT = -1;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: portal
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14.2
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - name: postgredb
              mountPath: /var/lib/postgresql/data
              subPath: pgdata
            - mountPath: /docker-entrypoint-initdb.d
              name: postgresinit
      volumes:
        - name: postgresinit
          configMap:
            name: postgres-init
            items:
              - key: docker_postgres_init.sql
                path: docker_postgres_init.sql
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  namespace: portal
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
   - port: 5432
     appProtocol: TCP
  selector:
   app: postgres
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: postgres-rest-interface-mtls
  namespace: portal
spec:
  host: postgres.portal.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---